{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/customer.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/toolbar\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/table\";\nimport * as i11 from \"@angular/material/paginator\";\nimport * as i12 from \"@angular/material/card\";\nimport * as i13 from \"@angular/material/tabs\";\nfunction CustomerComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"list\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" Lista \");\n  }\n}\nfunction CustomerComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r29 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", customer_r29.idCustomer, \" \");\n  }\n}\nfunction CustomerComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Primeiro Nome \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r30 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", customer_r30.firstNameCustomer, \" \");\n  }\n}\nfunction CustomerComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" \\u00DAltimo Nome \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r31 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", customer_r31.lastNameCustomer, \" \");\n  }\n}\nfunction CustomerComponent_th_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" CPF \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r32 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", customer_r32.cpfCustomer, \" \");\n  }\n}\nfunction CustomerComponent_th_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Data de Nascimento \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r33 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", customer_r33.birthdateCustomer, \" \");\n  }\n}\nfunction CustomerComponent_th_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Data de Cadastro \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r34 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", customer_r34.dateCreatedCustomer, \" \");\n  }\n}\nfunction CustomerComponent_th_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Renda Mensal (R$) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r35 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", customer_r35.monthlyIncomeCustomer, \" \");\n  }\n}\nfunction CustomerComponent_th_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r36 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", customer_r36.emailCustomer, \" \");\n  }\n}\nfunction CustomerComponent_th_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Status \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31)(1, \"mat-icon\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const customer_r37 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", customer_r37.statusCustomer ? \"done_all\" : \"remove_done\", \" \");\n  }\n}\nfunction CustomerComponent_th_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Excluir \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 31)(1, \"a\", 32);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_td_40_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r40);\n      const customer_r38 = restoredCtx.$implicit;\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.deleteCustomer(customer_r38));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"delete-forever\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction CustomerComponent_th_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Alterar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 31)(1, \"a\", 32);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_td_43_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const customer_r41 = restoredCtx.$implicit;\n      const ctx_r42 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(6);\n      _r0.selectedIndex = 1;\n      return i0.ɵɵresetView(ctx_r42.findCustomer(customer_r41));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"mode_edit\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction CustomerComponent_tr_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 33);\n  }\n}\nfunction CustomerComponent_tr_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 34);\n  }\n}\nfunction CustomerComponent_ng_template_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"face\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" Novo \");\n  }\n}\nfunction CustomerComponent_div_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Cliente \", ctx_r27.customer.firstNameCustomer, \" cadastrado com sucesso!\");\n  }\n}\nfunction CustomerComponent_div_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const error_r45 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(error_r45);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 20, 50];\n};\nexport class CustomerComponent {\n  constructor(service, toastr) {\n    this.service = service;\n    this.toastr = toastr;\n    this.success = false;\n    this.displayedColumns = ['idCustomer', 'firstNameCustomer', 'lastNameCustomer', 'cpfCustomer', 'birthdateCustomer', 'dateCreatedCustomer', 'monthlyIncomeCustomer', 'emailCustomer', 'statusCustomer', 'deleteCustomer', 'findCustomer'];\n    this.ELEMENT_DATA = [];\n    this.message = '';\n    this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n    this.customer = {\n      idCustomer: '',\n      firstNameCustomer: '',\n      lastNameCustomer: '',\n      birthdateCustomer: '',\n      dateCreatedCustomer: '',\n      monthlyIncomeCustomer: '',\n      cpfCustomer: '',\n      emailCustomer: '',\n      passwordCustomer: '',\n      statusCustomer: true\n    };\n  }\n  ngOnInit() {\n    this.listCustomer();\n  }\n  saveCustomer() {\n    const datePipe = new DatePipe('en-US');\n    this.customer.birthdateCustomer = datePipe.transform(this.customer.birthdateCustomer, 'dd/MM/yyyy');\n    this.service.save(this.customer).subscribe({\n      next: response => {\n        this.success = true;\n        this.errors = [];\n        this.listCustomer();\n        //this.toast.success('O cliente '+ this.customer.firstNameCustomer +' '+ this.customer.lastNameCustomer +' foi cadastrado com sucesso!', 'Sucesso!!!');      \n      },\n      error: ex => {\n        if (ex.error.errors) {\n          this.errors = ex.error.errors;\n          this.success = false;\n          ex.error.errors.forEach(element => {\n            //this.toast.error(element.message, 'Atenção!!!');                    \n          });\n        } else {\n          this.success = false;\n          this.errors = ex.error.errors;\n          //this.toast.error(ex.error.message, 'Atenção!');\n        }\n      }\n    });\n  }\n\n  listCustomer() {\n    this.service.list().subscribe(response => {\n      this.ELEMENT_DATA = response.result; // Verifique o tipo e faça a conversão\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  deleteCustomer(customer) {\n    if (window.confirm('Deseja realmente excluir este contato?')) {\n      this.service.delete(customer.idCustomer).subscribe(response => {\n        this.message = response.result.result;\n        window.alert(this.message);\n        this.listCustomer();\n      });\n    }\n  }\n  carregarCliente(customer) {\n    this.customer = {\n      ...customer\n    };\n  }\n  findCustomer(customer) {\n    this.service.findById(customer.idCustomer).subscribe(response => {\n      this.customer = response.result;\n      const datePipe = new DatePipe('en-US');\n      var date = this.customer.birthdateCustomer;\n      var newDate = date.split(\"/\").reverse().join(\"-\");\n      this.customer.birthdateCustomer = newDate;\n    });\n  }\n}\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  viewQuery: function CustomerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n    }\n  },\n  decls: 86,\n  vars: 14,\n  consts: [[\"tabGroup\", \"matTabGroup\"], [\"mat-tab-label\", \"\"], [\"mat-table\", \"\", \"matTableResponsive\", \"\", 1, \"full-width\", 3, \"dataSource\"], [\"matColumnDef\", \"idCustomer\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"firstNameCustomer\"], [\"matColumnDef\", \"lastNameCustomer\"], [\"matColumnDef\", \"cpfCustomer\"], [\"matColumnDef\", \"birthdateCustomer\"], [\"matColumnDef\", \"dateCreatedCustomer\"], [\"matColumnDef\", \"monthlyIncomeCustomer\"], [\"matColumnDef\", \"emailCustomer\"], [\"matColumnDef\", \"statusCustomer\"], [\"matColumnDef\", \"deleteCustomer\"], [\"matColumnDef\", \"findCustomer\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\"], [1, \"full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite seu primeiro nome\", \"name\", \"firstNameCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite seu \\u00FAltimo nome\", \"name\", \"lastNameCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite seu CPF\", \"name\", \"cpfCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"matInput\", \"\", \"placeholder\", \"Digite sua data de nascimento\", \"name\", \"birthdateCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"matInput\", \"\", \"placeholder\", \"Digite sua renda mensal (R$)\", \"name\", \"monthlyIncomeCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Digite seu email\", \"name\", \"emailCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Digite sua senha\", \"name\", \"passwordCustomer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"role\", \"alert\", 4, \"ngIf\"], [\"role\", \"alert\", 4, \"ngFor\", \"ngForOf\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"href\", \"#\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [\"role\", \"alert\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\")(1, \"span\")(2, \"mat-icon\");\n      i0.ɵɵtext(3, \"account_circle\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" Clientes \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"mat-tab-group\", null, 0)(7, \"mat-tab\");\n      i0.ɵɵtemplate(8, CustomerComponent_ng_template_8_Template, 3, 0, \"ng-template\", 1);\n      i0.ɵɵelementStart(9, \"mat-card\")(10, \"table\", 2);\n      i0.ɵɵelementContainerStart(11, 3);\n      i0.ɵɵtemplate(12, CustomerComponent_th_12_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(13, CustomerComponent_td_13_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(14, 6);\n      i0.ɵɵtemplate(15, CustomerComponent_th_15_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(16, CustomerComponent_td_16_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(17, 7);\n      i0.ɵɵtemplate(18, CustomerComponent_th_18_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(19, CustomerComponent_td_19_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(20, 8);\n      i0.ɵɵtemplate(21, CustomerComponent_th_21_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(22, CustomerComponent_td_22_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(23, 9);\n      i0.ɵɵtemplate(24, CustomerComponent_th_24_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(25, CustomerComponent_td_25_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(26, 10);\n      i0.ɵɵtemplate(27, CustomerComponent_th_27_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(28, CustomerComponent_td_28_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(29, 11);\n      i0.ɵɵtemplate(30, CustomerComponent_th_30_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(31, CustomerComponent_td_31_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(32, 12);\n      i0.ɵɵtemplate(33, CustomerComponent_th_33_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(34, CustomerComponent_td_34_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(35, 13);\n      i0.ɵɵtemplate(36, CustomerComponent_th_36_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(37, CustomerComponent_td_37_Template, 3, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(38, 14);\n      i0.ɵɵtemplate(39, CustomerComponent_th_39_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(40, CustomerComponent_td_40_Template, 4, 0, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(41, 15);\n      i0.ɵɵtemplate(42, CustomerComponent_th_42_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(43, CustomerComponent_td_43_Template, 4, 0, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(44, CustomerComponent_tr_44_Template, 1, 0, \"tr\", 16);\n      i0.ɵɵtemplate(45, CustomerComponent_tr_45_Template, 1, 0, \"tr\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"mat-paginator\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"mat-tab\");\n      i0.ɵɵtemplate(48, CustomerComponent_ng_template_48_Template, 3, 0, \"ng-template\", 1);\n      i0.ɵɵelementStart(49, \"mat-card\")(50, \"mat-card-title\");\n      i0.ɵɵtext(51, \"Cadastro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"form\")(53, \"mat-form-field\", 19)(54, \"mat-label\");\n      i0.ɵɵtext(55, \"Primeiro Nome: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_56_listener($event) {\n        return ctx.customer.firstNameCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(57, \"mat-form-field\", 19)(58, \"mat-label\");\n      i0.ɵɵtext(59, \"\\u00DAltimo Nome: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"input\", 21);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_60_listener($event) {\n        return ctx.customer.lastNameCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(61, \"mat-form-field\", 19)(62, \"mat-label\");\n      i0.ɵɵtext(63, \"CPF: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"input\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_64_listener($event) {\n        return ctx.customer.cpfCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(65, \"mat-form-field\", 19)(66, \"mat-label\");\n      i0.ɵɵtext(67, \"Data de Nascimento: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"input\", 23);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_68_listener($event) {\n        return ctx.customer.birthdateCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(69, \"mat-form-field\", 19)(70, \"mat-label\");\n      i0.ɵɵtext(71, \"Renda Mensal: R$ \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(72, \"input\", 24);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_72_listener($event) {\n        return ctx.customer.monthlyIncomeCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(73, \"mat-form-field\", 19)(74, \"mat-label\");\n      i0.ɵɵtext(75, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(76, \"input\", 25);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_76_listener($event) {\n        return ctx.customer.emailCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(77, \"mat-form-field\", 19)(78, \"mat-label\");\n      i0.ɵɵtext(79, \"Senha: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(80, \"input\", 26);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_80_listener($event) {\n        return ctx.customer.passwordCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(81, \"button\", 27);\n      i0.ɵɵlistener(\"click\", function CustomerComponent_Template_button_click_81_listener() {\n        return ctx.saveCustomer();\n      });\n      i0.ɵɵtext(82, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(83, \"br\");\n      i0.ɵɵtemplate(84, CustomerComponent_div_84_Template, 3, 1, \"div\", 28);\n      i0.ɵɵtemplate(85, CustomerComponent_div_85_Template, 3, 1, \"div\", 29);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(34);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(13, _c0));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.firstNameCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.lastNameCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.cpfCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.birthdateCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.monthlyIncomeCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.emailCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.passwordCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.success == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.MatButton, i5.MatToolbar, i6.MatInput, i7.MatFormField, i7.MatLabel, i8.MatIcon, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NumberValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.RequiredValidator, i9.NgModel, i9.NgForm, i10.MatTable, i10.MatHeaderCellDef, i10.MatHeaderRowDef, i10.MatColumnDef, i10.MatCellDef, i10.MatRowDef, i10.MatHeaderCell, i10.MatCell, i10.MatHeaderRow, i10.MatRow, i11.MatPaginator, i12.MatCard, i12.MatCardTitle, i13.MatTabLabel, i13.MatTab, i13.MatTabGroup],\n  styles: [\".full-width[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["DatePipe","MatTableDataSource","MatPaginator","i0","_r0","CustomerComponent","constructor","service","toastr","ELEMENT_DATA","idCustomer","firstNameCustomer","lastNameCustomer","birthdateCustomer","dateCreatedCustomer","monthlyIncomeCustomer","cpfCustomer","emailCustomer","passwordCustomer","statusCustomer","ngOnInit","listCustomer","saveCustomer","datePipe","customer","transform","save","subscribe","next","response","success","errors","error","ex","forEach","element","list","result","dataSource","paginator","deleteCustomer","window","confirm","delete","message","alert","carregarCliente","findCustomer","findById","date","newDate","split","reverse","join","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\Fatec\\6º Semenstre\\SpreingProjets\\AngularProjects\\front-app-with-angular\\src\\app\\customer\\customer.component.ts","D:\\Fatec\\6º Semenstre\\SpreingProjets\\AngularProjects\\front-app-with-angular\\src\\app\\customer\\customer.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { CustomerService } from '../service/customer.service';\r\nimport { Customer } from '../model/customer';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent {  \r\n\r\n  success: boolean = false;\r\n  errors!: String[];\r\n  displayedColumns: string[] = ['idCustomer', 'firstNameCustomer', 'lastNameCustomer', 'cpfCustomer', 'birthdateCustomer', 'dateCreatedCustomer', 'monthlyIncomeCustomer', 'emailCustomer', 'statusCustomer', 'deleteCustomer', 'findCustomer'];\r\n  ELEMENT_DATA: Customer[] = [];\r\n  message: string ='';\r\n  dataSource = new MatTableDataSource<Customer>(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  CustomerService: any;\r\n\r\n  constructor(private service: CustomerService, private toastr: ToastrService){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   this.listCustomer(); \r\n  }\r\n\r\n  customer: Customer = {\r\n    idCustomer: '',\r\n    firstNameCustomer: '',\r\n    lastNameCustomer: '',\r\n    birthdateCustomer: '',\r\n    dateCreatedCustomer: '',\r\n    monthlyIncomeCustomer: '',\r\n    cpfCustomer: '',\r\n    emailCustomer: '',\r\n    passwordCustomer: '',\r\n    statusCustomer: true\r\n  }\r\n\r\n  saveCustomer() {\r\n    const datePipe = new DatePipe('en-US');\r\n    this.customer.birthdateCustomer = datePipe.transform(\r\n      this.customer.birthdateCustomer, 'dd/MM/yyyy');\r\n    \r\n    this.service.save(this.customer).subscribe({next: response => {\r\n      this.success = true;\r\n      this.errors = [];\r\n      this.listCustomer();\r\n    //this.toast.success('O cliente '+ this.customer.firstNameCustomer +' '+ this.customer.lastNameCustomer +' foi cadastrado com sucesso!', 'Sucesso!!!');      \r\n    }, error: ex => {\r\n      if (ex.error.errors) {\r\n        this.errors = ex.error.errors;\r\n        this.success = false;\r\n        ex.error.errors.forEach((element:any) => {\r\n          //this.toast.error(element.message, 'Atenção!!!');                    \r\n        });\r\n      } else {\r\n          this.success = false;\r\n          this.errors = ex.error.errors;\r\n        //this.toast.error(ex.error.message, 'Atenção!');\r\n      }\r\n    }})\r\n  }\r\n\r\n  listCustomer() {\r\n    this.service.list().subscribe((response: any) => {\r\n      this.ELEMENT_DATA = response.result as Customer[]; // Verifique o tipo e faça a conversão\r\n      this.dataSource = new MatTableDataSource<Customer>(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n    deleteCustomer(customer: Customer){\r\n      if (window.confirm('Deseja realmente excluir este contato?'))  {\r\n        this.service.delete(customer.idCustomer).subscribe((response: any) => {\r\n          this.message = response.result.result as string;\r\n          window.alert(this.message);\r\n          this.listCustomer();\r\n        });\r\n      }\r\n    }\r\n\r\n   carregarCliente(customer: Customer){\r\n      this.customer = {...customer};\r\n    }\r\n\r\n    findCustomer(customer: Customer) {    \r\n      this.service.findById(customer.idCustomer).subscribe((response: any) => {\r\n        this.customer\r\n         = response.result as Customer; \r\n        const datePipe = new DatePipe('en-US');\r\n        var date = this.customer.birthdateCustomer;\r\n        var newDate = date.split(\"/\").reverse().join(\"-\");\r\n        this.customer.birthdateCustomer = newDate;\r\n      });\r\n    }\r\n   \r\n  }","<mat-toolbar>\r\n    <span>\r\n        <mat-icon>account_circle</mat-icon>\r\n        Clientes\r\n    </span>\r\n</mat-toolbar>\r\n<mat-tab-group #tabGroup=\"matTabGroup\">\r\n    <mat-tab>\r\n        <ng-template mat-tab-label>\r\n            <mat-icon>list</mat-icon>\r\n            Lista\r\n        </ng-template>\r\n        <mat-card>\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"full-width\" matTableResponsive>\r\n\r\n                <ng-container matColumnDef=\"idCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> ID </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"> {{ customer.idCustomer }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"firstNameCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Primeiro Nome </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"> {{ customer.firstNameCustomer }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"lastNameCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Último Nome </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"> {{ customer.lastNameCustomer }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cpfCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> CPF </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"> {{ customer.cpfCustomer }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"birthdateCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Data de Nascimento </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"> {{ customer.birthdateCustomer }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"dateCreatedCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Data de Cadastro </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"> {{ customer.dateCreatedCustomer }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"monthlyIncomeCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Renda Mensal (R$) </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"> {{ customer.monthlyIncomeCustomer }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"emailCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Email </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"> {{ customer.emailCustomer }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"statusCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Status </th>\r\n                    <td mat-cell *matCellDef=\"let customer\"><mat-icon> {{ customer.statusCustomer ?  'done_all' : 'remove_done'}} </mat-icon></td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"deleteCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Excluir </th>\r\n                    <td mat-cell *matCellDef=\"let customer\">\r\n                        <a href=\"#\" (click)=\"deleteCustomer(customer)\">\r\n                            <mat-icon>delete-forever</mat-icon>\r\n                        </a>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"findCustomer\">\r\n                    <th mat-header-cell *matHeaderCellDef> Alterar </th>\r\n                    <td mat-cell *matCellDef=\"let customer\">\r\n                        <a href=\"#\" (click)=\"tabGroup.selectedIndex=1;findCustomer(customer);\">\r\n                            <mat-icon>mode_edit</mat-icon>\r\n                        </a>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n        </mat-card>\r\n    </mat-tab>\r\n    <mat-tab>\r\n        <ng-template mat-tab-label>\r\n            <mat-icon>face</mat-icon>\r\n            Novo\r\n        </ng-template>\r\n        <mat-card>\r\n            <mat-card-title>Cadastro</mat-card-title>\r\n            <form>\r\n                <mat-form-field class=\"full-width\">\r\n                    <mat-label>Primeiro Nome: </mat-label>\r\n                    <input type=\"text\" matInput placeholder=\"Digite seu primeiro nome\"\r\n                        [(ngModel)]=\"customer.firstNameCustomer\" name=\"firstNameCustomer\" required />\r\n                </mat-form-field>\r\n                <mat-form-field class=\"full-width\">\r\n                    <mat-label>Último Nome: </mat-label>\r\n                    <input type=\"text\" matInput placeholder=\"Digite seu último nome\"\r\n                        [(ngModel)]=\"customer.lastNameCustomer\" name=\"lastNameCustomer\" required />\r\n                </mat-form-field>\r\n                <mat-form-field class=\"full-width\">\r\n                    <mat-label>CPF: </mat-label>\r\n                    <input type=\"text\" matInput placeholder=\"Digite seu CPF\" [(ngModel)]=\"customer.cpfCustomer\"\r\n                        name=\"cpfCustomer\" required />\r\n                </mat-form-field>\r\n                <mat-form-field class=\"full-width\">\r\n                    <mat-label>Data de Nascimento: </mat-label>\r\n                    <input type=\"date\" matInput placeholder=\"Digite sua data de nascimento\"\r\n                        [(ngModel)]=\"customer.birthdateCustomer\" name=\"birthdateCustomer\" required />\r\n                </mat-form-field>\r\n                <mat-form-field class=\"full-width\">\r\n                    <mat-label>Renda Mensal: R$ </mat-label>\r\n                    <input type=\"number\" matInput placeholder=\"Digite sua renda mensal (R$)\"\r\n                        [(ngModel)]=\"customer.monthlyIncomeCustomer\" name=\"monthlyIncomeCustomer\" required />\r\n                </mat-form-field>\r\n                <mat-form-field class=\"full-width\">\r\n                    <mat-label>Email: </mat-label>\r\n                    <input type=\"email\" matInput placeholder=\"Digite seu email\" [(ngModel)]=\"customer.emailCustomer\"\r\n                        name=\"emailCustomer\" required />\r\n                </mat-form-field>\r\n                <mat-form-field class=\"full-width\">\r\n                    <mat-label>Senha: </mat-label>\r\n                    <input type=\"password\" matInput placeholder=\"Digite sua senha\"\r\n                        [(ngModel)]=\"customer.passwordCustomer\" name=\"passwordCustomer\" required />\r\n                </mat-form-field>\r\n                <button (click)=\"saveCustomer();\" mat-raised-button color=\"primary\">Salvar</button>\r\n                <br />\r\n                <div role=\"alert\" *ngIf=\"success == true\">\r\n                    <span>Cliente {{ customer.firstNameCustomer }} cadastrado com sucesso!</span>\r\n                </div>\r\n                <div role=\"alert\" *ngFor=\"let error of errors\">\r\n                    <span>{{ error }}</span>\r\n                </div>\r\n            </form>\r\n        </mat-card>\r\n    </mat-tab>\r\n</mat-tab-group>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}