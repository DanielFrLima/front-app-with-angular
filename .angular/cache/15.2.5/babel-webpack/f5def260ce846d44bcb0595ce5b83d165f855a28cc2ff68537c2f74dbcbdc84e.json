{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nconst ELEMENT_DATA = [{\n  position: 1,\n  name: 'Hydrogen',\n  weight: 1.0079,\n  symbol: 'H'\n}, {\n  position: 2,\n  name: 'Helium',\n  weight: 4.0026,\n  symbol: 'He'\n}, {\n  position: 3,\n  name: 'Lithium',\n  weight: 6.941,\n  symbol: 'Li'\n}, {\n  position: 4,\n  name: 'Beryllium',\n  weight: 9.0122,\n  symbol: 'Be'\n}, {\n  position: 5,\n  name: 'Boron',\n  weight: 10.811,\n  symbol: 'B'\n}, {\n  position: 6,\n  name: 'Carbon',\n  weight: 12.0107,\n  symbol: 'C'\n}, {\n  position: 7,\n  name: 'Nitrogen',\n  weight: 14.0067,\n  symbol: 'N'\n}, {\n  position: 8,\n  name: 'Oxygen',\n  weight: 15.9994,\n  symbol: 'O'\n}, {\n  position: 9,\n  name: 'Fluorine',\n  weight: 18.9984,\n  symbol: 'F'\n}, {\n  position: 10,\n  name: 'Neon',\n  weight: 20.1797,\n  symbol: 'Ne'\n}];\nlet CustomerListComponent = class CustomerListComponent {\n  constructor(service) {\n    this.service = service;\n    this.ELEMENT_DATA = [];\n    this.displayedColumns = ['id', 'nome', 'cpf', 'email', 'acoes'];\n    this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n  }\n  ngOnInit() {\n    this.findAll();\n  }\n  findAll() {\n    this.service.findAll().subscribe(resposta => {\n      this.ELEMENT_DATA = resposta;\n      this.dataSource = new MatTableDataSource(resposta);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n};\n__decorate([ViewChild(MatPaginator)], CustomerListComponent.prototype, \"paginator\", void 0);\nCustomerListComponent = __decorate([Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})], CustomerListComponent);\nexport { CustomerListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASzC,MAAMC,YAAY,GAAsB,CACtC;EAACC,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,MAAM,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAG,CAAC,EAC5D;EAACH,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,MAAM,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAI,CAAC,EAC3D;EAACH,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,SAAS;EAAEC,MAAM,EAAE,KAAK;EAAEC,MAAM,EAAE;AAAI,CAAC,EAC3D;EAACH,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,WAAW;EAAEC,MAAM,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAI,CAAC,EAC9D;EAACH,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,OAAO;EAAEC,MAAM,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAG,CAAC,EACzD;EAACH,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,MAAM,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAG,CAAC,EAC3D;EAACH,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,MAAM,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAG,CAAC,EAC7D;EAACH,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,MAAM,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAG,CAAC,EAC3D;EAACH,QAAQ,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,MAAM,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAG,CAAC,EAC7D;EAACH,QAAQ,EAAE,EAAE;EAAEC,IAAI,EAAE,MAAM;EAAEC,MAAM,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAI,CAAC,CAC5D;AAOM,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAQhCC,YACUC,OAAuB;IAAvB,YAAO,GAAPA,OAAO;IARjB,iBAAY,GAAc,EAAE;IAE5B,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC;IACpE,eAAU,GAAG,IAAIC,kBAAkB,CAAU,IAAI,CAACR,YAAY,CAAC;EAK1B;EAErCS,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL,IAAI,CAACH,OAAO,CAACG,OAAO,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MAC1C,IAAI,CAACZ,YAAY,GAAGY,QAAQ;MAC5B,IAAI,CAACC,UAAU,GAAG,IAAIL,kBAAkB,CAAUI,QAAQ,CAAC;MAC3D,IAAI,CAACC,UAAU,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS;IAC5C,CAAC,CAAC;EACJ;EAEAC,WAAW,CAACC,KAAY;IACtB,MAAMC,WAAW,GAAID,KAAK,CAACE,MAA2B,CAACC,KAAK;IAC5D,IAAI,CAACN,UAAU,CAACO,MAAM,GAAGH,WAAW,CAACI,IAAI,EAAE,CAACC,WAAW,EAAE;EAC3D;CAED;AAtB0BC,YAAxBC,SAAS,CAACC,YAAY,CAAC,wDAAyB;AANtCpB,qBAAqB,eALjCN,SAAS,CAAC;EACT2B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACWvB,qBAAqB,CA4BjC;SA5BYA,qBAAqB","names":["Component","ELEMENT_DATA","position","name","weight","symbol","CustomerListComponent","constructor","service","MatTableDataSource","ngOnInit","findAll","subscribe","resposta","dataSource","paginator","applyFilter","event","filterValue","target","value","filter","trim","toLowerCase","__decorate","ViewChild","MatPaginator","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Fatec\\6ยบ Semenstre\\SpreingProjets\\AngularProjects\\front-app-with-angular\\src\\app\\customer\\customer-list\\customer-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n  ELEMENT_DATA: Cliente[] = []\n\n  displayedColumns: string[] = ['id', 'nome', 'cpf', 'email', 'acoes'];\n  dataSource = new MatTableDataSource<Cliente>(this.ELEMENT_DATA);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private service: ClienteService) { }\n\n  ngOnInit(): void {\n    this.findAll();\n  }\n\n  findAll() {\n    this.service.findAll().subscribe(resposta => {\n      this.ELEMENT_DATA = resposta\n      this.dataSource = new MatTableDataSource<Cliente>(resposta);\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}