{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nlet CategoryComponent = class CategoryComponent {\n  constructor(service) {\n    this.service = service;\n    this.success = false;\n    this.displayedColumns = ['idCategory', 'nameCategory', 'descriptionCategory', 'deleteCategory', 'findCategory'];\n    this.ELEMENT_DATA = [];\n    this.message = '';\n    this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n    this.category = {\n      idCategory: '',\n      nameCategory: '',\n      descriptionCategory: ''\n    };\n  }\n  ngOnInit() {\n    this.listCategory();\n  }\n  saveCategory() {\n    this.service.save(this.category).subscribe({\n      next: response => {\n        this.success = true;\n        this.errors = [];\n        this.listCategory();\n        //this.toast.success('O cliente '+ this.category.firstNameCategory +' '+ this.category.lastNameCategory +' foi cadastrado com sucesso!', 'Sucesso!!!');      \n      },\n      error: ex => {\n        if (ex.error.errors) {\n          this.errors = ex.error.errors;\n          this.success = false;\n          ex.error.errors.forEach(element => {\n            //this.toast.error(element.message, 'Atenção!!!');                    \n          });\n        } else {\n          this.success = false;\n          this.errors = ex.error.errors;\n          this.listCategory();\n          //this.toast.error(ex.error.message, 'Atenção!');\n        }\n      }\n    });\n  }\n\n  listCategory() {\n    this.service.list().subscribe(response => {\n      this.ELEMENT_DATA = response.result; // Verifique o tipo e faça a conversão\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  deleteCategory(category) {\n    if (window.confirm('Deseja realmente excluir este contato?')) {\n      this.service.delete(category.idCategory).subscribe(response => {\n        this.message = response.result.result;\n        window.alert(this.message);\n        this.listCategory();\n      });\n    }\n  }\n  findCategory(category) {\n    this.service.findById(category.idCategory).subscribe(response => {\n      this.category = response.result;\n    });\n  }\n};\n__decorate([ViewChild(MatPaginator)], CategoryComponent.prototype, \"paginator\", void 0);\nCategoryComponent = __decorate([Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})], CategoryComponent);\nexport { CategoryComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","MatPaginator","MatTableDataSource","CategoryComponent","constructor","service","ELEMENT_DATA","idCategory","nameCategory","descriptionCategory","ngOnInit","listCategory","saveCategory","save","category","subscribe","next","response","success","errors","error","ex","forEach","element","list","result","dataSource","paginator","deleteCategory","window","confirm","delete","message","alert","findCategory","findById","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Fatec\\6º Semenstre\\SpreingProjets\\AngularProjects\\front-app-with-angular\\src\\app\\category\\category.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CategoryService } from '../service/category.service';\nimport { Category } from '../model/category';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent {\n\n  success: boolean = false;\n  errors!: String[];\n  displayedColumns: string[] = ['idCategory', 'nameCategory', 'descriptionCategory', 'deleteCategory', 'findCategory'];\n  ELEMENT_DATA: Category[] = [];\n  message: string ='';\n  dataSource = new MatTableDataSource<Category>(this.ELEMENT_DATA);\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor(private service: CategoryService) {}\n\n  ngOnInit(): void {\n    this.listCategory();\n  }\n\n  category: Category = {\n    idCategory: '',\n    nameCategory: '',\n    descriptionCategory: ''\n  }\n\n  saveCategory() {\n\n    this.service.save(this.category).subscribe({\n      next: response => {\n        this.success = true;\n        this.errors = [];\n        this.listCategory();\n        //this.toast.success('O cliente '+ this.category.firstNameCategory +' '+ this.category.lastNameCategory +' foi cadastrado com sucesso!', 'Sucesso!!!');      \n      }, error: ex => {\n        if (ex.error.errors) {\n          this.errors = ex.error.errors;\n          this.success = false;\n          ex.error.errors.forEach((element: any) => {\n            //this.toast.error(element.message, 'Atenção!!!');                    \n          });\n        } else {\n          this.success = false;\n          this.errors = ex.error.errors;\n          this.listCategory();\n          //this.toast.error(ex.error.message, 'Atenção!');\n        }\n      }\n    })\n  }\n\n  listCategory() {\n    this.service.list().subscribe((response: any) => {\n      this.ELEMENT_DATA = response.result as Category[]; // Verifique o tipo e faça a conversão\n      this.dataSource = new MatTableDataSource<Category>(this.ELEMENT_DATA);\n      this.dataSource.paginator = this.paginator;\n    });\n\n  }\n\n  deleteCategory(category: Category){\n    if (window.confirm('Deseja realmente excluir este contato?'))  {\n      this.service.delete(category.idCategory).subscribe((response: any) => {\n        this.message = response.result.result as string;\n        window.alert(this.message);\n        this.listCategory();\n      });\n    }\n  } \n\n\n  findCategory(category: Category) {    \n    this.service.findById(category.idCategory).subscribe((response: any) => {\n      this.category\n       = response.result as Category;       \n    });\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}